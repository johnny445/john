Volume attach to Running Instance

Step 1: Head over to EC2 –> Volumes and create a new volume of your preferred size and type.
Step 2: Select the created volume, right-click and select the “attach volume” option.
Step 3: Select the instance from the instance text box as shown below.
Step 4: Now, login to your ec2 instance and list the available disks using the following command.
## lsblk
Step 5: Check if the volume has any data using the following command.
## sudo file -s /dev/xvdf
If the above command output shows “/dev/xvdf: data“, it means your volume is empty.
Step 6: Format the volume to the ext4 filesystem using the following command.
## sudo mkfs -t ext4 /dev/xvdf
Step 7: Create a directory of your choice to mount our new ext4 volume. I am using the name “newvolume”
## sudo mkdir /newvolume
Step 8: Mount the volume to “newvolume” directory using the following command.
## sudo mount /dev/xvdf /newvolume/
Step 9: cd into newvolume directory and check the disk space for confirming the volume mount.
## cd /newvolume
## df -h .
To unmount the volume, you have to use the following command.
## umount /dev/xvdf
sudo umount -l /dev/xvdf
Automount EBS Volume on Reboot
By default on every reboot, the  EBS volumes other than root volume will get unmounted. 
To enable automount, you need to make an entry in the /etc/fstab file.

Step 1: Back up the /etc/fstab file.
##sudo cp /etc/fstab /etc/fstab.bak
Step 2: Open /etc/fstab file and make an entry in the following format.
device_name mount_point file_system_type fs_mntops fs_freq fs_passno
For example,
/dev/xvdf       /newvolume   ext4    defaults,nofail        0       0
Step 3: Execute the following command to check id the fstab file has any error.
##sudo mount -a

Init: commands 0 to 6
Runlevel	Scripts Directory
(Red Hat/Fedora Core)	State
0	/etc/rc.d/rc0.d/	shutdown/halt system
1	/etc/rc.d/rc1.d/	Single user mode
2	/etc/rc.d/rc2.d/	Multiuser with no network services exported
3	/etc/rc.d/rc3.d/	Default text/console only start. Full multiuser
4	/etc/rc.d/rc4.d/	Reserved for local use. Also X-windows (Slackware/BSD)
5	/etc/rc.d/rc5.d/	XDM X-windows GUI mode (Redhat/System V)
6	/etc/rc.d/rc6.d/	Reboot
s or S	
Single user/Maintenance mode (Slackware)
M	
Multiuser mode (Slackware)

create hard link and soft links:
Each hard linked file is assigned the same Inode value as the original, 
therefore they reference the same physical file location.
We cannot create a hard link for a directory to avoid recursive loops.
Command to create a hard link is:
$ ln  [original filename] [link name] 
Command to create a Soft link is:  
$ ln  -s [original filename] [link name] 
A soft link is similar to the file shortcut feature which is used in Windows Operating systems. 
Each soft linked file contains a separate Inode value that points to the original file. 